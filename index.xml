<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Keido</title><link>https://tsu-nera.github.io/keido/</link><description>Recent content on Keido</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://tsu-nera.github.io/keido/index.xml" rel="self" type="application/rss+xml"/><item><title>⚡My Emacs Config - 霹靂一閃</title><link>https://tsu-nera.github.io/keido/notes/hekireki/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/hekireki/</guid><description>Emacsの呼吸壱ノ型, 霹靂一閃.
packageの並び順は Doom Emacs の Molule Index (アルファベット順)に従う.
ref: https://github.com/tsu-nera/hekireki
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*- App Twitter ;; App ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ;; twittering-mode ;; この設定がないと認証が失敗した. ;; twittering-oauth-get-access-token: Failed to retrieve a request token (add-hook! &amp;#39;twittering-mode-hook (setq twittering-allow-insecure-server-cert t)) eww Emacsのテキストブラウザ(Manual)
notes:
ewwを起動しただけだとminibufferなのでC-gで消えてしまうので大きくC-x 1とかで大きくする. C-u M-x ewwでひとつのbufferを使いまわすのではなく別のBufferでewwを開く. M-RETでURLを新しいBufferで開く. Doom EmacsだとC-c s o(online)でいろいろと検索できる(w/Chrome). helm-google-suggest的な. (use-package! eww :bind (&amp;#34;C-c s w&amp;#34; .</description></item><item><title>🎓GTDのキモはマインドフルネス状態を目指してマインドワンダリングを制御すること</title><link>https://tsu-nera.github.io/keido/notes/20220102144508/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220102144508/</guid><description>ストレスフリーとはすなわちマインドフルな状態であり，気になることというのはマインドワンダリングである. そうすると，GTDのキモとはマインドフルネスである.
GTDの文脈でマインドフルネスを直接言及することはデビッド・アレンさんはしていないが，とても共通点が多い. 文脈ではストレス管理という言葉はよく現れる. GTDはもともとMind Like Waterに強く影響を受けている. これはマインドフルネス状態にとても近い.もう一つ言えば，マインドフルネスというのもサマタ瞑想の状態とヴィパッサナー瞑想の状態があるが，この状態はヴィパッサナーに近い.
すべてを把握していることで思考にとらわれることがなく，その場で対処せずにInboxに入れて週次レビューを計画することで受け流すことにより，心の平穏を保つ.
ただ，マインドフルネスと少し違うところは，マインドフルネスは受け入れて手放すことが重要視されているが，GTD はすべての気になることをかき集めてそれを判断保留するか明らかにするという点である. 手放すという観点がGTDにはなく，保留にしてはいるものの，明らかにしてすべてを把握するという意気込みがある.</description></item><item><title>🎓Wikiの整理はソースコードのリファクタリングをするときの心構えでやる</title><link>https://tsu-nera.github.io/keido/notes/20220112100409/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220112100409/</guid><description>良い着眼点，深堀する.</description></item><item><title>🎤【Z世代】世界を激変させるニュージェネレーション！Z世代の価値観を徹底解説 - 中田敦彦(2021-12-11)</title><link>https://tsu-nera.github.io/keido/notes/20220104155431/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220104155431/</guid><description>title: 【Z世代①】世界を激変させるニュージェネレーション！Z世代の価値観を徹底解説 editor: 中田敦彦のYOUTUBE大学 date: 2021-12-11 url https://www.youtube.com/watch?v=uIYR83OF7A4 https://www.youtube.com/watch?v=wnoj2XpLwIY book: Z世代マーケティング 世界を激変させるニューノーマル | ジェイソン・ドーシー アンド デニス・ヴィラ tags: 📝Z世代 highlights t.1:10 本はアメリカのZ世代について書いてある. Z世代は世界的なワードなのか.
X世代, Y世代もある. X世代: 1965-1976 Y世代: 1997-1995 Z世代: 1996-2012 Z世代は購買力がある Z世代はもう２５歳になっている. ! ということはこれからお金を稼ぐにはこの世代をターゲットにする必要がありそうだな. 日本はすくない. Z世代の特徴 スマホ一択 Eメール知らない. 他をさわったことがない. パソコンですらつかわない プラットフォーム使い分け テレビなんてつかわない.</description></item><item><title>🎤【ショート動画時代】YouTubeShorts vs TikTok vs Reels…メディアの次の覇権を担うのは一体どれだ？ - 中田敦彦(2022-01-01)</title><link>https://tsu-nera.github.io/keido/notes/20220103135419/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220103135419/</guid><description>title: 【ショート動画時代】YouTubeShorts vs TikTok vs Reels…メディアの次の覇権を担うのは一体どれだ？ editor: 中田敦彦のYouTube大学 date: 2022-01-01,2022-01-02 url https://www.youtube.com/watch?v=M0NN3VPmqcg https://www.youtube.com/watch?v=xM1Rsi8fAMk tags: 📝Z世代 highlights ショート動画のブームが来ている. Tiktokの月間平均視聴時間がYouTubeを超えた. このブームに着目して各SNSのテック企業も続々と参入している. YouTube(Google) -&amp;gt; YouTubeShort Instagram(Facebook) -&amp;gt; Instagram Reels(リールズと読む) まさにショート動画の戦国時代に突入している!! ショート動画が人気な理由. Z世代はスマホしかもっていない. スマホは縦型動画が見やすい. みたくない動画は指で弾いて拒否できるIF. Tiktokはリコメンドによって次の動画が自動的に流れる仕組みがあるから. YouTubeは基本的に検索で次の動画を選択する. バズればアルゴリズムによって一気にたくさんのユーザに自動的にレコメンドする仕組み. 既存の仕組みにはない恐ろしい拡散力. ショート動画は広告が流せない. なぜならコンテンツそのものが短いので. ショート動画そのもので収益化するのではなくこれをCMとして利用する. つまりメインの収益コンテンツへの誘導として利用する. これからはショート動画からメインコンテンツへ誘導して収益を上げる流れが確実にくる. すると，ショート動画を攻略することが次の時代の覇者となるだろう. notes Tiktokは優れたレコメンドエンジンの開発に全力を注いだという過去があるということをどこかできいた.</description></item><item><title>🏷List of Coursera Lectures</title><link>https://tsu-nera.github.io/keido/notes/20220105160323/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220105160323/</guid><description> 💻Learning How to Learn - Barbara Oakley(coursera)</description></item><item><title>💻A Road to Common Lisp - Steve Losh(2018)</title><link>https://tsu-nera.github.io/keido/notes/20220110033325/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220110033325/</guid><description>title: A Road to Common Lisp authors: Steve Losh url: https://stevelosh.com/blog/2018/08/a-road-to-common-lisp/ refs 原文: A Road to Common Lisp / Steve Losh 日本語訳: A Road to Common Lisp 翻訳 · GitHub &amp;ldquo;A Road to Common Lisp&amp;rdquo; を翻訳してみた - y2q_actionman’s ゴミクズチラ裏 Common Lispを学ぶための一つのロードマップ. 参考になるドキュメント.</description></item><item><title>💻GTDを噛み砕く - 吉良野すた(2020)</title><link>https://tsu-nera.github.io/keido/notes/20211231160618/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211231160618/</guid><description> authors: 吉良野すた url: https://stakiran.github.io/gtd%5Fkamikudaku/ date: 2020 tags 📝GTD highlights GTD とは秘書である GTDストレスフリーとは，すっきり，はっきり，ゆっくり すっきり: 頭のすべてを吐き出す はっきり: 次の行動を指し示す ゆっくり: 割り込みを制御</description></item><item><title>💻How I note - AlexeyShmalko(2020)</title><link>https://tsu-nera.github.io/keido/notes/20220104010102/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220104010102/</guid><description>title: How I note authors: Alexey, Shmalko url: https://www.alexeyshmalko.com/how-i-note/ tags 📝Org-roam 📝Zettelkasten Method highlights 私はよく本や論文やトークをインプットする.Web記事は形骸なので読まない. I mostly read books, research papers, and I watch talks. I read less and less articles online—I find most to be too shallow (compared to books), too narrow (dealing with specific technical issues rather than long-living ideas), and not worth taking notes on. (Though there are great ones!</description></item><item><title>💻Learning How to Learn - Barbara Oakley(coursera)</title><link>https://tsu-nera.github.io/keido/notes/20220105062820/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220105062820/</guid><description>title: Learning How to Learn: Powerful mental tools to help you master tough subjects authors: Barbara Oakley, Terrence Sejnowski url: https://www.coursera.org/learn/learning-how-to-learn tags 🏷Coursera 📝勉強法 Keywords ポモドーロテクニック チャンク マジックナンバー4 間隔学習 Teachers Barbara Oakley Terrence Sejnowski テレンス・J・セイノフスキー. 脳科学とニューラルネットワークのパイオニア. ディープラーニング革命という書籍を書いている. Notes: week1 highlights: week1 Focused vs Diffuse Thinking Focused Modeは既知の情報で活性化する.</description></item><item><title>💻講義の動画を倍速で視聴しても内容はちゃんと頭に入るのか？問題 - パレオな男(2022)</title><link>https://tsu-nera.github.io/keido/notes/20220104045818/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220104045818/</guid><description> title: 講義の動画を倍速で視聴しても内容はちゃんと頭に入るのか？問題 authors: 鈴木, 佑. url: https://yuchrszk.blogspot.com/2022/01/blog-post%5F04.html summary: 2倍速くらいならノーマル速度と変わらない or 学習効率はよい. ただし2倍以上だと落ちるので速すぎると悪い. notes これはすごい. 1.5倍速,2倍速とノーマル速度では2倍速のほうが学習効率が高かった. External Links 🔗Learning in double time: The effect of lecture video speed on immediate and delayed comprehension - Murphy - - Applied Cognitive Psychology - Wiley Online Library</description></item><item><title>📁Emacs</title><link>https://tsu-nera.github.io/keido/notes/20211231200630/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211231200630/</guid><description> 📝Emacs 📝Org-mode 📝Org-roam 📝ox-hugo 参照 ⚡My Emacs Config - 霹靂一閃</description></item><item><title>📁勉強記録</title><link>https://tsu-nera.github.io/keido/notes/20211231162342/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211231162342/</guid><description>Articles 💻講義の動画を倍速で視聴しても内容はちゃんと頭に入るのか？問題 - パレオな男(2022) 💻How I note - AlexeyShmalko(2020) 💻GTDを噛み砕く - 吉良野すた(2020) Books 📚実践Common Lisp - Peter Seibel(2008) 📚Land of Lisp - Conrad Barski(2013) 📚ブチ抜く力 - 与沢翼(2019) 📝ストレスフリーの仕事術 - デビッド・アレン(2006) 📝ひとつ上のGTD ストレスフリーの整理術 実践編 - デビッド・アレン(2010) Talks 🎤【ショート動画時代】YouTubeShorts vs TikTok vs Reels…メディアの次の覇権を担うのは一体どれだ？ - 中田敦彦(2022-01-01) 🎤【Z世代】世界を激変させるニュージェネレーション！Z世代の価値観を徹底解説 - 中田敦彦(2021-12-11) MOOCs 💻Learning How to Learn: Powerful mental tools to help you master tough subjects(coursera) Papers</description></item><item><title>📂Emacs</title><link>https://tsu-nera.github.io/keido/notes/20220112095806/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220112095806/</guid><description>📝Emacs 📝Org-mode 📝Org-roam 📝ox-hugo ref: ⚡My Emacs Config - 霹靂一閃</description></item><item><title>📚Land of Lisp - Conrad Barski(2013)</title><link>https://tsu-nera.github.io/keido/notes/20211113235959/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211113235959/</guid><description> title: Land of Lisp author: Conrad Barski date: 2013 tags 📝Common Lisp 書籍情報(External Links) http://landoflisp.com/ - public site https://www.youtube.com/watch?v=HM1Zb3xmvMc - music video Land of Lisp | M.D. ConradBarski, Barski,Conrad, 史朗, 川合 |本 | 通販 | Amazon - amazon</description></item><item><title>📚ひとつ上のGTD ストレスフリーの整理術 実践編 - デビッド・アレン(2010)</title><link>https://tsu-nera.github.io/keido/notes/20220101141021/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220101141021/</guid><description>title: ひとつ上のGTD ストレスフリーの整理術 実践編――仕事というゲームと人生というビジネスに勝利する方法 authors: David Allen date: 2010 tags 📝GTD notes 読み直してみると，心についての言及がとても多いことに気づいた. タスクという言葉をすべて気になること，もっといえばwonderに置き換えてしまうとこの本が新鮮に見える. つまりGTDで扱うのはタスクでなく気になることであり，マインドワンダリングを処理してマインドフルネスにいたるための一つの解なのだ. ACT(Acceptance &amp;amp; Commitmemt Therapy) と似ている部分もある. highlights p11: GTDの理論はストレスを把握して軽減するための実践的なアプローチ p18: 変化する不安な時代において，自分の下した判断に信頼をおく方法を提示した. p28: 優先順位はコロコロ変わる. そして押しつぶされそうになる. p29: GTDはストレスの管理を行う 既存の自己管理手法は時間管理や情報管理を行う. しかし問題は意味のわからないものが大量に押し寄せることだ. GTDはそこから生じるストレスの管理を扱う.
p43: GTDのキーワードは水のような心(Mind Like Water). 意識をいかに柔軟かつムダなく操作するかが生産性向上に必要.
p54: GTDはあなたの心を拡張する. 心を拡張して気になることの居場所をつくる.</description></item><item><title>📚ストレスフリーの仕事術 - デビッド・アレン(2006)</title><link>https://tsu-nera.github.io/keido/notes/20220102124443/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220102124443/</guid><description> authors: David Allen date: 2006 title: ストレスフリーの仕事術 - 仕事と人生をコントロールする52の法則 tags 📝GTD highlights p20. あなたの能力は，あなたがリラックスできる能力に比例する. p31. いいアイデアに限って，それを実行しているときでないときに現れる. リラックスしているときなど. なのでそれをメモするためにいつでもメモをとれる準備をしておく必要がある. p68. 考えるべきことについてすぐに考えないということが大事なのだ. 週に1回レビューの時間を確保してそのときに考える. するとその他の時間では考えないという贅沢が味わえる. p107. わたしが教えているのは，いかにして生活から不必要なストレスを取り除くか，ということ. p111. どんなときでも，たった一つの目の前のことに完全に集中することが，成果を上げる秘訣.</description></item><item><title>📚ブチ抜く力 - 与沢翼(2019)</title><link>https://tsu-nera.github.io/keido/notes/20220107143739/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220107143739/</guid><description> title: ブチ抜く力 authors: 与沢翼 date: 2019-03-02 publisher: 扶桑社 url: http://www.amazon.co.jp/dp/B07PBVBB4Q</description></item><item><title>📚実践Common Lisp - Peter Seibel(2008)</title><link>https://tsu-nera.github.io/keido/notes/20220110030705/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220110030705/</guid><description> title: 実践Common Lisp authors: Peter Seibel date: 2008-07-26 publisher: オーム社 url: http://www.amazon.co.jp/dp/978-4-274-06721-1 notes: 2016年にAmazonで購入したがメルカリで売却. また読みたくなったので2022にAmazonで中古購入. 販売停止なので今後は入手困難か? 英語ならばオンラインで読めるので最悪それで.</description></item><item><title>📝adb</title><link>https://tsu-nera.github.io/keido/notes/20211229061513/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211229061513/</guid><description>adb（Android Debug Bridge）はAndroid端末をデバッグする為のツール.1 Android SDK Platform-Toolsのひとつなので，インストールはSDK Platform-Toolsをインストールする.2
PCとAndroid端末をTCP通信で接続することでPCから様々な設定や操作が可能になる.USB経由で接続する方法とWiki経由で接続する方法がある.
adbをAndroidで利用するには，開発者向けオプションが有効になっている必要がある.3 またAndroid v10以前ではUSB経由でadbに乗り込んでportを開ける手順が必要(adb tcpip 5555).v11以上ならAndroidからの設定だけでよい.
External Links Android Debug Bridge（adb） - Android Developers公式(ja)の説明.&amp;#160;&amp;#x21a9;&amp;#xfe0e;
https://developer.android.com/studio/releases/platform-tools?hl=ja&amp;#160;&amp;#x21a9;&amp;#xfe0e;
https://developer.android.com/studio/command-line/adb?hl=ja#Enabling&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>📝Common Lisp</title><link>https://tsu-nera.github.io/keido/notes/20211211065629/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211211065629/</guid><description>tag: 📝Lisp
Common Lispの特徴 Common Lispの文法 参考情報 Common Lisp - Wikipedia 参照 📚Land of Lisp - Conrad Barski(2013) 📚実践Common Lisp - Peter Seibel(2008) 💻A Road to Common Lisp / Steve Losh</description></item><item><title>📝Emacs</title><link>https://tsu-nera.github.io/keido/notes/20211228180209/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211228180209/</guid><description>readonly repositories
https://emba.gnu.org/emacs/emacs https://github.com/emacs-mirror/emacs/commits/master Emacs Tips tip: Linux上で動作するEmacsで親指シフトの最適解(2022) ref: 🖊Linux上で動作するEmacsで親指シフト入力をする最適解(2022)
note:
ブログへ文章を移動した. &amp;lt;2022-01-12 水&amp;gt; こういう流動的なものはwikiに置かないほうがいいかも. howto: fcitxでEmacs GUIの日本語入力ができないときの対処方法 環境変数でLC_CTYPE=zh_CN.UTF-8を設定して起動する.
link: https://fcitx-im.org/wiki/Input%5Fmethod%5Frelated%5Fenvironment%5Fvariables
#!/bin/bash LC_CTYPE=zh_CN.UTF-8 emacs 日本語情報がなくて苦戦したが中国語でも同じ課題があるだろうという観点で検索したら解決方法か見つかったので載せておく.
howto: init.elをOrg Fileから生成するには? see
Emacsの設定（その2）設定ファイル（init.el）をorg-modeで管理する | A perfect autumn day init.elをOrg Fileから生成してそうなサイト https://takaxp.github.io/init.html https://www.grugrut.net/posts/my-emacs-init-el/ https://mugijiru.github.io/.emacs.d/basics/custom-file/ example: Doom Emacs実装 わたしの場合，Doom Emacsをつかっている(2022現在)ので，init.</description></item><item><title>📝GTD</title><link>https://tsu-nera.github.io/keido/notes/20220103071935/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220103071935/</guid><description>Getting Things Done.</description></item><item><title>📝Lisp</title><link>https://tsu-nera.github.io/keido/notes/20211211065603/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211211065603/</guid><description>List of Lisp Languages 📝Common Lisp Lispの特徴 Lispは力であるまとめ Lispは力である. いろいろなところで言われているこの抽象的な表現をまとめてみる.</description></item><item><title>📝Org-mode</title><link>https://tsu-nera.github.io/keido/notes/20211211071525/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211211071525/</guid><description>Org-capture howto: Google Chomeの閲覧内容をorg-captureするには? org-protocol と Chrome ExtentionのOrg Capture を利用する.
仕組みとしては，Chromeにインストールした拡張機能がorg-protocolというMIME type(アプリケーションを識別する体系)を発行するので，それをemacsclientで受け取って処理をする.
具体的にはemacslicentのデスクトップアプリケーションを作成して，org-protocolを処理するデフォルトアプリケーションでそのアプリケーションを指定.
Manjaro Linuxの例(xfce) ~/.local/share/applications/emacsclient.desktop作成
[Desktop Entry] Name=Emacsclient Exec=emacsclient %u Icon=emacs Type=Application Terminal=false MimeType=x-scheme-handler/org-protocol ~/.config/mimeapps.listに x-scheme-handler/org-protocol=emacsclient.desktop を追記.
update-desktop-databbaseをコマンドラインから実行.
org-captureの設定例.
(&amp;#34;p&amp;#34; &amp;#34;browser&amp;#34; entry (file &amp;#34;~/gtd/inbox/inbox.org&amp;#34;) &amp;#34;* %^{Title}\nSource: %u, %c\n #+BEGIN_QUOTE\n%:initial\n#+END_QUOTE\n\n\n%?&amp;#34;) (&amp;#34;L&amp;#34; &amp;#34;browser link&amp;#34; entry (file &amp;#34;~/gtd/inbox/inbox.org&amp;#34;) &amp;#34;* %? [[%:link][%:description]] \nCaptured On: %U&amp;#34;) ポイントはorg-captureのトリガキーをpとLにすること.これはorg-capture-extensionなのでこれを守らないと動かない.もしくは自分でブックマークレットを作成する.
learn more
Org-Protocol XDG MIME Applications - ArchWiki https://github.</description></item><item><title>📝Org-roam</title><link>https://tsu-nera.github.io/keido/notes/20211204183600/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211204183600/</guid><description>EmacsでZettelkasten Methodを実現するためのOrg-mode実装.
Org-roam まとめ Org-roamを解説した有料記事 An Orgmode Note Workflow - Rohit Goswami
Org-roam-bibtexやOrg-noterと連携した文献管理方法を解説.
How I note
Org-roamでZettelkastenを実現するための方法を解説.
ref: How I note
Org-roamから生成したサイトまとめ a.k.a. Digital Garden.
https://commonplace.doubleloop.net/ How I publish my org-roam wiki with org-publish - doubleloop https://braindump.jethro.dev/ https://braindump.badykov.com/about/ My Braindump - Kraken of Thought https://github.com/ayrat555/braindump https://www.alexeyshmalko.com/ https://notes.alexkehayias.com/ https://hugocisneros.com/notes/ My Org-roam Notes Workflow - Hugo Cisneros https://seds.</description></item><item><title>📝ox-hugo</title><link>https://tsu-nera.github.io/keido/notes/20211231044406/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211231044406/</guid><description>Org-modeからHugoに適したMarkdownとfrontmatterを出力するためのEmacs Package.
ox-hugo Tips howot: exportをスキップする方法 ref: https://ox-hugo.scripter.co/doc/tags-and-categories/#marking-files-to-not-be-exported
file baseでは，#+hugo_tags に noexport subtree baseでは，#+filetags に noexport howto: ox-hugoで画像を記事に埋め込むには? ox-hugoは/staticをrootにして画像を探すので，パスは/staticからの相対パスで書く.
ox-hugoはOrg fileに添付された画像をExportするときに自動でMarkdownファイルと同じディレクトリに配置してくれる.これは管理上とても楽である.
参考: Images in Content — ox-hugo - Org to Hugo exporter</description></item><item><title>📝Youtube</title><link>https://tsu-nera.github.io/keido/notes/20220107141801/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220107141801/</guid><description>動画サービス.
Youtube Tips YoutubeのプレイリストのRSSを取得するには? プレイリストのページを開いてplaylist_idを取得して以下のURLで設定.
https://www.youtube.com/feeds/videos.xml?playlist%5Fid=%7Bplaylist%5Fid}</description></item><item><title>📝Zettelkasten Method</title><link>https://tsu-nera.github.io/keido/notes/20211206071458/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211206071458/</guid><description>Zettelkasten Methodとは Niklas Luhmannの考案した, 思考をするための方法論，フレームワーク.
Zettelkastenという単語はZettelkastenのフレームワークを指す場合とZettlekastenで管理するPermanent Noteを入れる箱(Slipbox)を指す場合の2つがある.これらは書き手や文脈で統一されてないので情報を得るときは注意が必要.
ZK method, Zettelと省略されることもある.
Zettelkasten Methodまとめ Zettelkasten Methodでは以下の4種類のノートの概念がある.
Fleeting Notes Literature Notes Parmanent Notes Reference Notes 📝Fleeting Notes 思いついた思考を書き留めたもの.何でもOK, 思いついたら何でも書く.
道具は紙でも電子でもなんでもよいが，トピックごとだとあとで整理しやすい.
メインのシステムにNoteを移動したら捨てる,もしくは移動せずにそのまま捨てる.
Daily Notesについて Zettelkasten Methodの文脈での時系列のFleeting NotesとしてDaily Notes(DNP)という単語がある.
とはいえ，Niklus LuhmanやZonke Ahrensの著作ではこの概念は登場しない.
Roam ResearchやObsidianなどのZettelkastenのソフトウェア実装の文脈でよく登場する.
📝Literature Notes 日本語訳では，文献メモとも言われる.Lit Notes, lit notesと略されることもある.
インプットするたび書く.読んだ本，みたYoutube動画，受けた講座などなど.
覚えておきたいこと. 自分の思考. アウトプットに使いたいもの. 自分の言葉でリライトしながら書く. 著者の思想を自分の思想に翻訳する意味が有る.自分が理解していないものに対しては自分で書くことができない.</description></item><item><title>📝Zotero</title><link>https://tsu-nera.github.io/keido/notes/20211229203145/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211229203145/</guid><description>Zotero(ゾテロ)とは，論文管理を目的にしたオープンソースの文献管理ソフトウェア.
https://www.zotero.org/
Zoteroまとめ Zoteroは勉強したインプットのメタ情報の取得とアーカイブが可能 論文管理が目的とはいえ，論文でなくてもいろいろ管理することが可能.1
Web記事 Amazon(書誌情報) Youtube PDF etc&amp;hellip; たとえば，AmazonやYoutubeをZoteroに送信するとメタ情報がZotero画面に表示される. PDFで購入した電子書籍に対してAmazonのページからメタ情報を取得してPDFをその情報に添付することでPDFとメタ情報を管理できる.
さらに，Web記事はスクリーンショットという機能でhtmlとしてローカルに保存することも可能.
Zoteroは個人用のローカルはてなブックマーク，メモも管理できる annotationという形でその文献に対するメモを管理することが可能. いわば，はてなブックマークを詳細情報を含めてローカルで個人管理するようなもの.
参考文献 quick start guide : Zotero公式のクイックスタートガイド(ja) 【令和最新版】文献管理ソフト Zoteroのすゝめ｜SD｜note : 日本語の良記事 注釈 わたしの目的は文献一般を管理すること.論文はなかなか縁がない.&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>📝Z世代</title><link>https://tsu-nera.github.io/keido/notes/20211217134744/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20211217134744/</guid><description>1996-2012に生まれた世代.
Generatin Z, GenZともいう.</description></item><item><title>📝勉強法</title><link>https://tsu-nera.github.io/keido/notes/20220110081806/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220110081806/</guid><description>参照 💻Learning How to Learn - Barbara Oakley(coursera)</description></item><item><title>🗒知的生産基盤の運用ルールまとめ</title><link>https://tsu-nera.github.io/keido/notes/20220107073312/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsu-nera.github.io/keido/notes/20220107073312/</guid><description>ノート種別 Source Note Book Talk Online Paper Journal Note Knowledge Note Issue Note Test Note Concept Note Output Note ノート種別と絵文字の対応 📚Book Note - Books 📝Wiki Note - Memo 📂TOC Note(for wiki) - Open File Folder 🎓Concept Note - Graduation Cap 🏛MOC Note(for concept) - Classical Buildling 🗒Doc Note - Spiral Note Pad 🖊Output Note - Lower Left Ballpoint pen 💡Issue Note - Electric Light Bulb 🔨Project Note - Hammer 🏆Goal Note - Trophy 🦊DardFox Note - Fox Face</description></item></channel></rss>